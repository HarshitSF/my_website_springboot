# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: My Profile
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  tests:
    name: Unit tests
    #Run on Ubuntu using the latest version
    runs-on: ubuntu-latest
    #Job's steps
    steps:
      #Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
      - uses: actions/checkout@v1
      #Set up JDK 1.8
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '1.8'
      #Set up Maven cache
      - name: Cache Maven packages
        #This action allows caching dependencies and build outputs to improve workflow execution time.
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      #Run Tests
      - name: Run Tests
        run: mvn -B test
    #Build's job
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: '1.8'
        distribution: 'adopt'
        cache: maven
    - name: Build with Maven
      run: mvn clean install

    - name: Build & push Docker image
      uses: mr-smithers-excellent/docker-build-push@v5
      with:
        image: learnwithparth/myprofile
        tags: latest
        registry: docker.io
        dockerfile: Dockerfile
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
  deploy:
    steps:
    - name: Pull & Run from Hub
      uses: appleboy/ssh-action@master
      with:
        host: ec2-65-1-109-3.ap-south-1.compute.amazonaws.com
        username: ec2-user
        key: ${{secrets.AWS_PRIVATE_KEY}}
        envs: HITHUB_SHA
        script: |
          sudo docker pull learnwithparth/myprofile
          sudo docker stop mywebsite
          sudo docker rm mywebsite
          sudo docker run --detach --name mywebsite -p 443:443 learnwithparth/myprofile
